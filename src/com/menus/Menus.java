package com.menus;

import com.fichero.AccesoFichero;
import com.metodos.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class Menus extends javax.swing.JFrame {

    Visual objVis = new Visual();
    Metodos objMet = new Metodos();

    // Variable para saber si invertir est√° seleccionada
    Boolean vInvertir = false;

    // Array de String para almacenar las fuentes
    private String[] fuentes;
    private DefaultListModel dlm;

    // Variables para abrir ficheros desde el Pc
    JFileChooser seleccionar = new JFileChooser();
    File archivo;
    FileInputStream entrada;
    FileOutputStream salida;

    /**
     * Creates new form Menus
     */
    public Menus() {
        // Carga las fuentes del sistema
        dlm = new DefaultListModel();
        fuentes = GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();

        initComponents();
        
        // inserta la lista de fuentes en un Jlist del frame
        jListaF.setModel(dlm);
        // Metodo para inicializar la carga de datos
        objMet.cargarComponentes(dlm, fuentes);

        jPTraductor.setVisible(true);
        jPComunes.setVisible(false);
        jConfig.setVisible(false);
        jIdioma.setVisible(false);

        // Ventana
        this.setExtendedState(NORMAL);
        this.setLocationRelativeTo(null); // Centra la ventana en el monitor
        //this.setSize(Toolkit.getDefaultToolkit().getScreenSize());

    }


    public String abrirArchivo(File archivo) {
        String documento = "";
        try {
            entrada = new FileInputStream(archivo);
            int ascci;
            while ((ascci = entrada.read()) != -1) {
                char caracter = (char) ascci;
                documento += caracter;

            }
        } catch (Exception e) {

        }

        return documento;
    }

    public String guardarArchivo(File archivo, String documento) {
        String mensaje = null;
        File guardar = new File(documento);

        try {
            salida = new FileOutputStream(archivo);
            byte[] bytxt = documento.getBytes();
            salida.write(bytxt);
            mensaje = "Archivo Guardado";

        } catch (Exception e) {

        }
        return mensaje;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPTraductor = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTAreaTraducido = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTTraducir = new javax.swing.JTextArea();
        jBtn_traducir = new javax.swing.JButton();
        jTBInvertir = new javax.swing.JToggleButton();
        jCIdioma = new javax.swing.JComboBox<>();
        jPComunes = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jConfig = new javax.swing.JPanel();
        jPrueba = new javax.swing.JLabel();
        jComboSize = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListaF = new javax.swing.JList<>();
        jBColorF = new javax.swing.JButton();
        jBColorB = new javax.swing.JButton();
        jBColorL = new javax.swing.JButton();
        jIdioma = new javax.swing.JPanel();
        jBGuardar = new javax.swing.JButton();
        jMenus = new javax.swing.JMenuBar();
        jMTraductor = new javax.swing.JMenu();
        jMComunes = new javax.swing.JMenu();
        jMAdmin = new javax.swing.JMenu();
        jMIConfig = new javax.swing.JMenuItem();
        jMIdioma = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));
        setExtendedState(6);
        setIconImage(getIconImage());
        setMinimumSize(new java.awt.Dimension(1200, 800));
        setPreferredSize(new java.awt.Dimension(1200, 800));
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPTraductor.setBackground(new java.awt.Color(204, 204, 204));
        jPTraductor.setForeground(new java.awt.Color(204, 204, 204));
        jPTraductor.setToolTipText("");
        jPTraductor.setName("jPTraductor"); // NOI18N
        jPTraductor.setPreferredSize(new java.awt.Dimension(1200, 800));

        jTAreaTraducido.setEditable(false);
        jTAreaTraducido.setColumns(20);
        jTAreaTraducido.setRows(5);
        jScrollPane1.setViewportView(jTAreaTraducido);

        jTTraducir.setColumns(20);
        jTTraducir.setRows(5);
        jScrollPane2.setViewportView(jTTraducir);

        jBtn_traducir.setText("Traducir");
        jBtn_traducir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_traducirActionPerformed(evt);
            }
        });

        jTBInvertir.setText("Invertir");
        jTBInvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTBInvertirActionPerformed(evt);
            }
        });

        jCIdioma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCIdiomaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPTraductorLayout = new javax.swing.GroupLayout(jPTraductor);
        jPTraductor.setLayout(jPTraductorLayout);
        jPTraductorLayout.setHorizontalGroup(
            jPTraductorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPTraductorLayout.createSequentialGroup()
                .addGroup(jPTraductorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPTraductorLayout.createSequentialGroup()
                        .addGap(300, 300, 300)
                        .addGroup(jPTraductorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPTraductorLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jCIdioma, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jBtn_traducir)
                            .addComponent(jTBInvertir)))
                    .addGroup(jPTraductorLayout.createSequentialGroup()
                        .addGap(273, 273, 273)
                        .addGroup(jPTraductorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(657, 657, 657))
        );
        jPTraductorLayout.setVerticalGroup(
            jPTraductorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPTraductorLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jCIdioma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jBtn_traducir)
                .addGap(17, 17, 17)
                .addComponent(jTBInvertir)
                .addGap(111, 111, 111)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPTraductor, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPComunes.setName("jPComunes"); // NOI18N
        jPComunes.setPreferredSize(new java.awt.Dimension(1200, 800));
        jPComunes.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Comunes");
        jPComunes.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 30, -1, -1));

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Palabra", "Morse"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable);

        jPComunes.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 300));

        getContentPane().add(jPComunes, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 800));

        jConfig.setName("jConfig"); // NOI18N
        jConfig.setPreferredSize(new java.awt.Dimension(1200, 800));
        jConfig.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPrueba.setText("jConfig");
        jConfig.add(jPrueba, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 70, 40));

        jComboSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboSizeActionPerformed(evt);
            }
        });
        jConfig.add(jComboSize, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 90, -1));

        jListaF.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListaFValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(jListaF);

        jConfig.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 240, 150));

        jBColorF.setText("Cambiar Color Fondo");
        jBColorF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBColorFActionPerformed(evt);
            }
        });
        jConfig.add(jBColorF, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, -1, -1));

        jBColorB.setText("Cambiar Color Botones");
        jBColorB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBColorBActionPerformed(evt);
            }
        });
        jConfig.add(jBColorB, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 200, 160, -1));

        jBColorL.setText("Cambiar Color Letra");
        jBColorL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBColorLActionPerformed(evt);
            }
        });
        jConfig.add(jBColorL, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 230, 160, -1));

        getContentPane().add(jConfig, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 800));

        jIdioma.setPreferredSize(new java.awt.Dimension(1200, 800));
        jIdioma.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jBGuardar.setText("Guardar Documento");
        jBGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarActionPerformed(evt);
            }
        });
        jIdioma.add(jBGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, 130));

        getContentPane().add(jIdioma, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 800));

        jMenus.setBackground(new java.awt.Color(204, 204, 255));
        jMenus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenus.setForeground(new java.awt.Color(255, 255, 255));
        jMenus.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jMenus.setMinimumSize(new java.awt.Dimension(160, 25));
        jMenus.setPreferredSize(new java.awt.Dimension(180, 50));

        jMTraductor.setBackground(new java.awt.Color(51, 51, 255));
        jMTraductor.setText("Traductor");
        jMTraductor.setName("Btn_Traductor"); // NOI18N
        jMTraductor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMTraductorMouseClicked(evt);
            }
        });
        jMenus.add(jMTraductor);

        jMComunes.setBackground(new java.awt.Color(51, 51, 255));
        jMComunes.setText("Comunes");
        jMComunes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMComunesMouseClicked(evt);
            }
        });
        jMenus.add(jMComunes);

        jMAdmin.setBackground(new java.awt.Color(51, 51, 255));
        jMAdmin.setText("Admin");
        jMAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMAdminMouseClicked(evt);
            }
        });

        jMIConfig.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMIConfig.setBackground(new java.awt.Color(51, 51, 255));
        jMIConfig.setText("Configuraci√≥n");
        jMIConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIConfigActionPerformed(evt);
            }
        });
        jMAdmin.add(jMIConfig);

        jMIdioma.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMIdioma.setBackground(new java.awt.Color(51, 51, 255));
        jMIdioma.setText("Insertar idioma");
        jMIdioma.setName("jIdioma"); // NOI18N
        jMIdioma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIdiomaActionPerformed(evt);
            }
        });
        jMAdmin.add(jMIdioma);

        jMenus.add(jMAdmin);

        setJMenuBar(jMenus);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMTraductorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMTraductorMouseClicked
        // Limpia el Panel
        //jMTraductor.removeAll();
        objMet.limpiar();
        objVis.verPanelesMenus(jPTraductor.getName());

    }//GEN-LAST:event_jMTraductorMouseClicked

    private void jMComunesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMComunesMouseClicked

        objMet.limpiar();
        objVis.verPanelesMenus(jPComunes.getName());
    }//GEN-LAST:event_jMComunesMouseClicked

    private void jMAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMAdminMouseClicked


    }//GEN-LAST:event_jMAdminMouseClicked

    private void jBtn_traducirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_traducirActionPerformed
        Object idioma = jCIdioma.getSelectedItem();
        if (idioma.equals("Morse")) {
            jTAreaTraducido.setText(objMet.traduciraMorse(jTTraducir.getText(), vInvertir));
        } else {
            objMet.traductor(idioma, vInvertir);

        }


    }//GEN-LAST:event_jBtn_traducirActionPerformed

    private void jTBInvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTBInvertirActionPerformed
        objMet.limpiar();

        vInvertir = jTBInvertir.isSelected();
        this.jBtn_traducirActionPerformed(evt);

    }//GEN-LAST:event_jTBInvertirActionPerformed

    private void jMIConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIConfigActionPerformed
        objMet.limpiar();
        objVis.verPanelesMenus(jConfig.getName());
    }//GEN-LAST:event_jMIConfigActionPerformed

    //Combo-BOX
    private void jComboSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboSizeActionPerformed
        Font f = jPrueba.getFont();
        objVis.cambiarTexto(f.getName(), Integer.parseInt(String.valueOf(jComboSize.getSelectedItem())));
        // jPrueba.setFont(new Font(f.getName(), Font.PLAIN, Integer.parseInt(String.valueOf(jComboSize.getSelectedItem()))));
    }//GEN-LAST:event_jComboSizeActionPerformed

    // Lista
    private void jListaFValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListaFValueChanged
        Font f = jPrueba.getFont();
        objVis.cambiarTexto(String.valueOf(dlm.getElementAt(jListaF.getSelectedIndex())), f.getSize());
        //  jPrueba.setFont(new Font((String) dlm.getElementAt(jListaF.getSelectedIndex()), Font.PLAIN, f.getSize()));

    }//GEN-LAST:event_jListaFValueChanged

    private void jBColorFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBColorFActionPerformed
        Color c = JColorChooser.showDialog(rootPane, "Elige un color", this.getBackground());
        objVis.cambiarColorFondo(c);
    }//GEN-LAST:event_jBColorFActionPerformed

    private void jBColorBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBColorBActionPerformed
        Color c = JColorChooser.showDialog(rootPane, "Elige un color", this.getBackground());
        objVis.cambiarColorBotones(c);
    }//GEN-LAST:event_jBColorBActionPerformed

    private void jBColorLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBColorLActionPerformed
        Color c = JColorChooser.showDialog(rootPane, "Elige un color", this.getBackground());
        objVis.cambiarColorLetras(c);
    }//GEN-LAST:event_jBColorLActionPerformed

    private void jMIdiomaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIdiomaActionPerformed
        objMet.limpiar();
        objVis.verPanelesMenus(jMIdioma.getName());
    }//GEN-LAST:event_jMIdiomaActionPerformed

    private void jBGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarActionPerformed
        if (seleccionar.showDialog(null, "Guardar") == JFileChooser.APPROVE_OPTION) {
            archivo = seleccionar.getSelectedFile();
            if (archivo.getName().endsWith("ttf")) {

                File guardar = new File(archivo.getName());
                System.out.println(archivo.getPath());
                System.out.println(archivo.getName());
                objMet.copyFileUsingFileChannels(guardar, archivo.getPath());
            }

        }
    }//GEN-LAST:event_jBGuardarActionPerformed

    private void jCIdiomaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCIdiomaActionPerformed

        objMet.limpiar();
        this.jBtn_traducirActionPerformed(evt);

    }//GEN-LAST:event_jCIdiomaActionPerformed
    
    // Cambio estado de la pantalla
    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged
        
        if(evt.getNewState()==6){
           
            
            jPTraductor.setPreferredSize(evt.getWindow().getSize());

        }     
        
    }//GEN-LAST:event_formWindowStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menus().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton jBColorB;
    public static javax.swing.JButton jBColorF;
    public static javax.swing.JButton jBColorL;
    public static javax.swing.JButton jBGuardar;
    public static javax.swing.JButton jBtn_traducir;
    public static javax.swing.JComboBox<String> jCIdioma;
    public static javax.swing.JComboBox<String> jComboSize;
    public static javax.swing.JPanel jConfig;
    public static javax.swing.JPanel jIdioma;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jListaF;
    public static javax.swing.JMenu jMAdmin;
    public static javax.swing.JMenu jMComunes;
    public static javax.swing.JMenuItem jMIConfig;
    public static javax.swing.JMenuItem jMIdioma;
    public static javax.swing.JMenu jMTraductor;
    public static javax.swing.JMenuBar jMenus;
    public static javax.swing.JPanel jPComunes;
    public static javax.swing.JPanel jPTraductor;
    public static javax.swing.JLabel jPrueba;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    public static javax.swing.JTextArea jTAreaTraducido;
    public static javax.swing.JToggleButton jTBInvertir;
    public static javax.swing.JTextArea jTTraducir;
    public static javax.swing.JTable jTable;
    // End of variables declaration//GEN-END:variables

    /**
     * Metodo sustituir el icono del Jframe
     *
     * @return Una Image al sistema
     */
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("Images/at-at.png"));

        return retValue;
    }

}
